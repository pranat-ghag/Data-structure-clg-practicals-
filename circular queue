#include<iostream.h>
#include<conio.h>
#include<stdlib.h>
class CirQUEUE {
	int arr[5];
	int front, rear, i, max;

public:
	CirQUEUE() {
		front = -1;
		rear = -1;
		max = 5;
	}



	void Insert() {
		int data;
		// Check if full
		if ((front == 0 && rear == max - 1) || (rear + 1 == front)) {
			cout << "Queue is in Overflow Condition" << endl;
			return;
		}

		cout << "\nEnter the Element: ";
		cin >> data;

		if (front == -1) { // First element
			front = rear = 0;
		}
		else if (rear == max - 1 && front != 0) { // Wrap around
			rear = 0;
		}
		else {
			rear++;
		}

		arr[rear] = data;
 }

	void del() {
		if (front == -1) {
			cout << "\nQueue is Empty!" << endl;

		}
		else {
			cout << "Deleted Element: " << arr[front] << endl;
		      }
		if (front == rear) {
			front = rear = -1;
		}
		else if (front == max - 1)
		{
			front = 0 ;
		}
		else
		{
			front++;
		}

   }

		void display() {
		cout << "\nARRAY :\n";
		if (rear >= front) {
			for (i = front; i <= rear; i++) {
				cout << arr[i]<<endl;
			}
		}
		else
		{
			for (i = front; i < max; i++)
			{
				cout << arr[i]<<endl;
			}
			for (i = 0; i <= rear; i++)
			{
				cout << arr[i]<<endl;
			}
		}
	}
};

int main() {
	clrscr();
	CirQUEUE q1;
	int choice;


	while (1) {
		cout << "\n================= MAIN MENU ==================" << endl;
		cout << "1. Insert\n2. Delete\n3. Display\n4. Exit\n=> ";
		cin >> choice;

		switch (choice) {
		case 1:
		q1.Insert();
		break;

		case 2:
		q1.del();
		break;

		case 3:
		q1.display();
		break;

		 case 4:
		 cout<<"Exiting!";
		 exit(0) ;
		 break;

		default:
		cout << "\nWRONG CHOICE! Please try again..." << endl;
		break;
		}
	}

	getch();
	return 0;
}

